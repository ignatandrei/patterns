"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[110],{7523:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(4848),r=a(8453);const s={id:"Adapter",title:"Adapter",tags:["Adapter","https://github.com/ignatandrei/patterns","structural","design pattern","SQLiteDataAdapter","EncodingAdapter"]},o="Pattern:  Adapter",i={id:"patterns/Adapter",title:"Adapter",description:"Adapter design pattern allows the interface of an existing class to be used as another interface.",source:"@site/docs/patterns/Adapter.md",sourceDirName:"patterns",slug:"/patterns/Adapter",permalink:"/patterns/docs/patterns/Adapter",draft:!1,unlisted:!1,tags:[{label:"Adapter",permalink:"/patterns/docs/tags/adapter"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"structural",permalink:"/patterns/docs/tags/structural"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"},{label:"SQLiteDataAdapter",permalink:"/patterns/docs/tags/sq-lite-data-adapter"},{label:"EncodingAdapter",permalink:"/patterns/docs/tags/encoding-adapter"}],version:"current",frontMatter:{id:"Adapter",title:"Adapter",tags:["Adapter","https://github.com/ignatandrei/patterns","structural","design pattern","SQLiteDataAdapter","EncodingAdapter"]},sidebar:"tutorialSidebar",previous:{title:"AbstractFactory",permalink:"/patterns/docs/patterns/AbstractFactory"},next:{title:"Builder",permalink:"/patterns/docs/patterns/Builder"}},d={},c=[{value:"Purpose of .NET implementation",id:"purpose-of-net-implementation",level:2},{value:"Examples in .NET :",id:"examples-in-net-",level:2},{value:"SQLiteDataAdapter",id:"sqlitedataadapter",level:3},{value:"EncodingAdapter",id:"encodingadapter",level:3},{value:"See Source Code for Microsoft implementation of Adapter",id:"see-source-code-for-microsoft-implementation-of-adapter",level:2},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"pattern--adapter",children:"Pattern:  Adapter"}),"\n",(0,n.jsxs)(t.p,{children:["Adapter design pattern allows the interface of an existing class to be used as another interface.    ",(0,n.jsx)("br",{}),"\nIt is often used to make existing classes work with others without modifying their source code.    ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(t.h2,{id:"purpose-of-net-implementation",children:"Purpose of .NET implementation"}),"\n",(0,n.jsxs)(t.p,{children:["You want to  transfer data from a database Command to a DataTable.    ",(0,n.jsx)("br",{}),"\nThe SQLiteDataAdapter serves as an adapter between the SQLiteCommand object (which represents a SQL command or stored procedure to execute against a SQLite database) and the DataTable object (which represents in-memory data in a tabular format).    ",(0,n.jsx)("br",{})]}),"\n",(0,n.jsx)(t.h2,{id:"examples-in-net-",children:"Examples in .NET :"}),"\n",(0,n.jsx)(t.h3,{id:"sqlitedataadapter",children:"SQLiteDataAdapter"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="SQLiteDataAdapter example for Pattern Adapter"',children:'namespace Adaptor;\ninternal class SQLiteDataAdapterDemo\n{\n    /// <summary>\n    ///Adaptee  - Command \n    ///Target  - DataTable\n    ///Adapter  - SqlDataAdapter\n    ///Target Method - Fill(Dataset instance)\n    /// </summary>\n    /// <returns></returns>\n    public static async Task MainSqliteAdapterAsync()\n    {\n        //Target: Creates a DataTable instance to hold the data fetched from the database.\n        var dataFormats = new DataTable();\n        Console.WriteLine(dataFormats.Rows.Count);\n        Console.WriteLine(dataFormats.Columns.Count);\n        using (var con = new SQLiteConnection())\n        {\n            con.ConnectionString = "Data Source=CatalogRo.sqlite3";\n            await con.OpenAsync();\n\n            using (var cmd = new SQLiteCommand())\n            {\n                // Adaptee: Sets the SQL command text to fetch all records from the \'Format\' table.\n                cmd.CommandText = "select * from Format";\n                cmd.Connection = con;\n                using (var adapt = new SQLiteDataAdapter(cmd))\n                {\n                    // Adapter: Fills the DataTable (Target) with data fetched using the SQLiteCommand (Adaptee).\n                    adapt.Fill(dataFormats);\n                }\n            }\n\n        }\n        Console.WriteLine(dataFormats.Rows.Count);\n        Console.WriteLine(dataFormats.Columns.Count);\n    }\n}\n\n'})}),"\n",(0,n.jsx)(t.h3,{id:"encodingadapter",children:"EncodingAdapter"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="EncodingAdapter example for Pattern Adapter"',children:'namespace Adaptor;\ninternal class EncodingAdapterDemo\n{\n    /// <summary>\n    ///Adaptee  - string \n    ///Target  - bytes\n    ///Adapter  - encoding\n    ///Target Method - GetBytes\n    /// </summary>\n    public static void AdapterStringByte()\n    {\n        var url = "http://msprogrammer.serviciipeweb.ro";\n        Encoding e = new ASCIIEncoding();\n        var b = e.GetBytes(url);\n\n        Console.WriteLine($"from {e.EncodingName} number bytes {b.Length}");\n\n        e = new UTF32Encoding();\n        b = e.GetBytes(url);\n        Console.WriteLine($"from {e.EncodingName} number bytes {b.Length}");\n\n    }\n\n\n}\n\n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:a(4133).A+"",children:"Download source"})}),"\n",(0,n.jsx)(t.h2,{id:"see-source-code-for-microsoft-implementation-of-adapter",children:"See Source Code for Microsoft implementation of Adapter"}),"\n",(0,n.jsx)("a",{href:"https://source.dot.net/#System.Private.CoreLib/src/libraries/System.Private.CoreLib/src/System/Text/ASCIIEncoding.cs",target:"_blank",children:"SourceCode AsciiEncoding"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://github.com/mono/mono/blob/9bb01f57a126dab35f070ce238457931e9814c33/mcs/class/Mono.Data.Sqlite/Mono.Data.Sqlite_2.0/SQLiteDataAdapter.cs#L20",target:"_blank",children:"SourceCode SqliteDataAdapter"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://source.dot.net/#System.Private.CoreLib/src/libraries/System.Private.CoreLib/src/System/Text/UTF32Encoding.cs",target:"_blank",children:"SourceCode UTF32Encoding"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,n.jsx)("a",{href:"http://wiki.c2.com/?AdapterPattern",target:"_blank",children:"C2Wiki"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"http://www.dofactory.com/net/Adapter-design-pattern",target:"_blank",children:"dofactory"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://github.com/kamranahmedse/design-patterns-for-humans?tab=readme-ov-file#-Adapter",target:"_blank",children:"DPH"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://en.wikipedia.org/wiki/Adapter_pattern",target:"_blank",children:"Wikipedia"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h2,{id:"homework",children:"Homework"}),"\n",(0,n.jsxs)(t.p,{children:["iPhone 7 does not have a headphone jack.    ",(0,n.jsx)("br",{}),"\nImplement an adapter that will allow you to use your old headphones , that have jack, with the iPhone 7.    ",(0,n.jsx)("br",{})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},4133:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/files/adapter-d940238d6efdadf6a58324ed066eb1e5.zip"},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var n=a(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);