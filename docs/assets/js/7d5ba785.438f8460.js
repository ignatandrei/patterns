"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[2514],{8032:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var t=n(4848),i=n(8453);const a={id:"Builder",title:"Builder",tags:["Builder","https://github.com/ignatandrei/patterns","creational","design pattern","UriBuilder","SqlConnectionStringBuilder"]},o="Pattern:  Builder",l={id:"patterns/Builder",title:"Builder",description:"The intent of the Builder design pattern is to separate the construction of a complex object from its representation",source:"@site/docs/patterns/Builder.md",sourceDirName:"patterns",slug:"/patterns/Builder",permalink:"/patterns/docs/patterns/Builder",draft:!1,unlisted:!1,tags:[{label:"Builder",permalink:"/patterns/docs/tags/builder"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"creational",permalink:"/patterns/docs/tags/creational"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"},{label:"UriBuilder",permalink:"/patterns/docs/tags/uri-builder"},{label:"SqlConnectionStringBuilder",permalink:"/patterns/docs/tags/sql-connection-string-builder"}],version:"current",frontMatter:{id:"Builder",title:"Builder",tags:["Builder","https://github.com/ignatandrei/patterns","creational","design pattern","UriBuilder","SqlConnectionStringBuilder"]},sidebar:"tutorialSidebar",previous:{title:"Adapter",permalink:"/patterns/docs/patterns/Adapter"},next:{title:"Chain",permalink:"/patterns/docs/patterns/Chain"}},s={},d=[{value:"Examples in .NET :",id:"examples-in-net-",level:2},{value:"UriBuilder",id:"uribuilder",level:3},{value:"SqlConnectionStringBuilder",id:"sqlconnectionstringbuilder",level:3},{value:"See Source Code for Microsoft implementation of Builder",id:"see-source-code-for-microsoft-implementation-of-builder",level:2},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"pattern--builder",children:"Pattern:  Builder"}),"\n",(0,t.jsx)(r.p,{children:"The intent of the Builder design pattern is to separate the construction of a complex object from its representation"}),"\n",(0,t.jsx)(r.h2,{id:"examples-in-net-",children:"Examples in .NET :"}),"\n",(0,t.jsx)(r.h3,{id:"uribuilder",children:"UriBuilder"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",metastring:'showLineNumbers title="UriBuilder example for Pattern Builder"',children:'namespace Builder;\r\nstatic class UriBuilderDemo\r\n{\r\n    public static void UriMod()\r\n    {\r\n        //start example 1\r\n        var uri = new Uri("https://msprogrammer.serviciipeweb.ro/category/friday-links/");\r\n        var b = new UriBuilder(uri);\r\n        //changing part\r\n        b.Scheme = "http";\r\n        //now we have http://msprogrammer.serviciipeweb.ro/category/friday-links/\r\n        Console.WriteLine(b.Uri);\r\n        //changing part\r\n        b.Path = "2018/03/05/design-patterns-class/";\r\n        //now we have http://msprogrammer.serviciipeweb.ro/2018/03/05/design-patterns-class/\r\n        Console.WriteLine(b.Uri);\r\n        //end example 1\r\n    }\r\n}\r\n\n'})}),"\n",(0,t.jsx)(r.h3,{id:"sqlconnectionstringbuilder",children:"SqlConnectionStringBuilder"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-csharp",metastring:'showLineNumbers title="SqlConnectionStringBuilder example for Pattern Builder"',children:'namespace Builder;\r\ninternal class ConnectionStringDemo\r\n{\r\n    public static void ConnectionString()\r\n    {\r\n        //start example 2\r\n        var build = new SqlConnectionStringBuilder();\r\n        build.DataSource = ".";\r\n        build.InitialCatalog = "MyDatabase";\r\n        build.ConnectTimeout = 30;\r\n        //here is the connection string built\r\n        Console.WriteLine(build.ConnectionString);\r\n        //end example 2\r\n    }\r\n}\r\n\n'})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(4741).A+"",children:"Download source"})}),"\n",(0,t.jsx)(r.h2,{id:"see-source-code-for-microsoft-implementation-of-builder",children:"See Source Code for Microsoft implementation of Builder"}),"\n",(0,t.jsx)("a",{href:"https://referencesource.microsoft.com/#System.Data/fx/src/data/System/Data/SqlClient/SqlConnectionStringBuilder.cs",target:"_blank",children:"SourceCode SqlConnectionStringBuilder"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("a",{href:"https://source.dot.net/#System.Private.Uri/System/UriBuilder.cs",target:"_blank",children:"SourceCode UriBuilder"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(r.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,t.jsx)("a",{href:"http://wiki.c2.com/?BuilderPattern",target:"_blank",children:"C2Wiki"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("a",{href:"http://www.dofactory.com/net/Builder-design-pattern",target:"_blank",children:"dofactory"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("a",{href:"https://github.com/kamranahmedse/design-patterns-for-humans?tab=readme-ov-file#-Builder",target:"_blank",children:"DPH"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("a",{href:"https://en.wikipedia.org/wiki/Builder_pattern",target:"_blank",children:"Wikipedia"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(r.h2,{id:"homework",children:"Homework"}),"\n",(0,t.jsx)(r.p,{children:"Imagine that you have a logger that logs to a file and to a console. Implement a builder that will allow you to create a logger with different configurations. For example, you can set the log level, the log format, and the log destination."})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},4741:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/files/builder-bfa9d8a76af31fa360af0a8669f8eeea.zip"},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var t=n(6540);const i={},a=t.createContext(i);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);