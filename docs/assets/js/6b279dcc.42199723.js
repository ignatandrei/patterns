"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[5175],{1992:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(4848),i=a(8453);const r={id:"Lazy",title:"Lazy",tags:["Lazy","https://github.com/ignatandrei/patterns","creational","design pattern","Lazy"]},o="Pattern:  Lazy",s={id:"patterns/Lazy",title:"Lazy",description:"Lazy initialization is the tactic of delaying the creation of an object, the calculation of a value, or some other expensive process until the first time it is needed.",source:"@site/docs/patterns/Lazy.md",sourceDirName:"patterns",slug:"/patterns/Lazy",permalink:"/patterns/docs/patterns/Lazy",draft:!1,unlisted:!1,tags:[{label:"Lazy",permalink:"/patterns/docs/tags/lazy"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"creational",permalink:"/patterns/docs/tags/creational"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"}],version:"current",frontMatter:{id:"Lazy",title:"Lazy",tags:["Lazy","https://github.com/ignatandrei/patterns","creational","design pattern","Lazy"]},sidebar:"tutorialSidebar",previous:{title:"Iterator",permalink:"/patterns/docs/patterns/Iterator"},next:{title:"NullObject",permalink:"/patterns/docs/patterns/NullObject"}},l={},c=[{value:"Example in .NET :",id:"example-in-net-",level:2},{value:"Lazy",id:"lazy",level:3},{value:"See Source Code for Microsoft implementation of Lazy",id:"see-source-code-for-microsoft-implementation-of-lazy",level:2},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"pattern--lazy",children:"Pattern:  Lazy"}),"\n",(0,n.jsx)(t.p,{children:"Lazy initialization is the tactic of delaying the creation of an object, the calculation of a value, or some other expensive process until the first time it is needed."}),"\n",(0,n.jsx)(t.h2,{id:"example-in-net-",children:"Example in .NET :"}),"\n",(0,n.jsx)(t.h3,{id:"lazy",children:"Lazy"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="Lazy example for Pattern Lazy"',children:'namespace Lazy;\r\ninternal class LazyDemo\r\n{\r\n    public DateTime dateTimeConstructClass =DateTime.Now;\r\n    \r\n    public Lazy<DateTime> DateTimeLazy = new(() =>\r\n    {\r\n        Console.WriteLine("Lazy<DateTime> is being initialized ONCE!");\r\n        return DateTime.Now;\r\n    });\r\n}\r\n\n'})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:a(3680).A+"",children:"Download source"})}),"\n",(0,n.jsx)(t.h2,{id:"see-source-code-for-microsoft-implementation-of-lazy",children:"See Source Code for Microsoft implementation of Lazy"}),"\n",(0,n.jsx)("a",{href:"https://source.dot.net/#System.Private.CoreLib/src/libraries/System.Private.CoreLib/src/System/Lazy.cs",target:"_blank",children:"SourceCode Lazy"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,n.jsx)("a",{href:"https://wiki.c2.com/?LazyInstantiationPattern",target:"_blank",children:"C2Wiki"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://en.wikipedia.org/wiki/Lazy_initialization",target:"_blank",children:"Wikipedia"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.h2,{id:"homework",children:"Homework"}),"\n",(0,n.jsx)(t.p,{children:"Implement a lazy initialization of a logger that logs to a file and to a console. The logger should be created only when it is needed."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3680:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/files/lazy-7a3d3f73da6414b091949fcb7d1a997d.zip"},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>s});var n=a(6540);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);