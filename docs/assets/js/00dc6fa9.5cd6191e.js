"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[6774],{330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(4848),r=n(8453);const a={id:"Prototype",title:"Prototype",tags:["Prototype","https://github.com/ignatandrei/patterns","creational","design pattern","ICloneable"]},s="Pattern:  Prototype",i={id:"patterns/Prototype",title:"Prototype",description:"It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects.",source:"@site/docs/patterns/Prototype.md",sourceDirName:"patterns",slug:"/patterns/Prototype",permalink:"/patterns/docs/patterns/Prototype",draft:!1,unlisted:!1,tags:[{label:"Prototype",permalink:"/patterns/docs/tags/prototype"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"creational",permalink:"/patterns/docs/tags/creational"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"},{label:"ICloneable",permalink:"/patterns/docs/tags/i-cloneable"}],version:"current",frontMatter:{id:"Prototype",title:"Prototype",tags:["Prototype","https://github.com/ignatandrei/patterns","creational","design pattern","ICloneable"]},sidebar:"tutorialSidebar",previous:{title:"Observer",permalink:"/patterns/docs/patterns/Observer"},next:{title:"Singleton",permalink:"/patterns/docs/patterns/Singleton"}},l={},p=[{value:"Purpose of .NET implementation",id:"purpose-of-net-implementation",level:2},{value:"Example in .NET :",id:"example-in-net-",level:2},{value:"ICloneable",id:"icloneable",level:3},{value:"See Source Code for Microsoft implementation of Prototype",id:"see-source-code-for-microsoft-implementation-of-prototype",level:2},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"pattern--prototype",children:"Pattern:  Prototype"}),"\n",(0,o.jsxs)(t.p,{children:["It is used when the type of objects to create is determined by a prototypical instance, which is cloned to produce new objects.    ",(0,o.jsx)("br",{})]}),"\n",(0,o.jsx)(t.h2,{id:"purpose-of-net-implementation",children:"Purpose of .NET implementation"}),"\n",(0,o.jsxs)(t.p,{children:["If you want to clone an object ( that has members and methods ), the easy way is to copy the members into a new instance.    ",(0,o.jsx)("br",{}),"\nBut if you have a complex object, you may want to use the Prototype pattern.    ",(0,o.jsx)("br",{}),"\nYou then provide MemberwiseClone is a shallow copy for the members of an object.    ",(0,o.jsx)("br",{}),"\nHowever, the Prototype pattern is not used very often in .NET, because the ICloneable interface is not very useful.    ",(0,o.jsx)("br",{})]}),"\n",(0,o.jsx)(t.h2,{id:"example-in-net-",children:"Example in .NET :"}),"\n",(0,o.jsx)(t.h3,{id:"icloneable",children:"ICloneable"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="ICloneable example for Pattern Prototype"',children:"using System;\n\nnamespace Prototype;\nclass Parent : ICloneable\n{\n    public int Age { get; set; }\n    public Child MyChild { get; set; }\n\n    public object Clone()\n    {\n        //TODO: serialize + unserialize \n        //with System.Text.Json.JsonSerializer\n\n        var p = ShallowClone();\n        //TODO: clone the child \n        var c = new Child();\n        c.Age = this.MyChild.Age;\n\n        p.MyChild = c;\n        return p;\n    }\n\n    public Parent ShallowClone()\n    {\n        return this.MemberwiseClone() as Parent;\n    }\n}\n\n\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8730).A+"",children:"Download source"})}),"\n",(0,o.jsx)(t.h2,{id:"see-source-code-for-microsoft-implementation-of-prototype",children:"See Source Code for Microsoft implementation of Prototype"}),"\n",(0,o.jsx)("a",{href:"https://source.dot.net/#System.Private.CoreLib/src/System/Object.CoreCLR.cs",target:"_blank",children:"SourceCode Object.MemberwiseClone"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,o.jsx)("a",{href:"https://wiki.c2.com/?PrototypePattern",target:"_blank",children:"C2Wiki"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("a",{href:"http://www.dofactory.com/net/Prototype-design-pattern",target:"_blank",children:"dofactory"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("a",{href:"https://github.com/kamranahmedse/design-patterns-for-humans?tab=readme-ov-file#-Prototype",target:"_blank",children:"DPH"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("a",{href:"https://en.wikipedia.org/wiki/Prototype_pattern",target:"_blank",children:"Wikipedia"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(t.h2,{id:"homework",children:"Homework"}),"\n",(0,o.jsxs)(t.p,{children:["Imagine that you have a cow farm and you want to create a new cow.    ",(0,o.jsx)("br",{}),"\nImplement a prototype that will allow you to clone a cow.    ",(0,o.jsx)("br",{}),"\nThe cow should have a name and a weight.    ",(0,o.jsx)("br",{})]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8730:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/files/prototype-3819f5ed39fe50da64a01a382487145f.zip"},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(6540);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);