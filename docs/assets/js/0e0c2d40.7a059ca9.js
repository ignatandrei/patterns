"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[547],{2786:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(4848),a=r(8453);const o={id:"Factory",title:"Factory",tags:["Factory","https://github.com/ignatandrei/patterns","creational","design pattern","Factory"]},s="Pattern:  Factory",i={id:"patterns/Factory",title:"Factory",description:"A factory is a function or method that returns objects of a varying prototype or class from some method call, which is assumed to be new",source:"@site/docs/patterns/Factory.md",sourceDirName:"patterns",slug:"/patterns/Factory",permalink:"/patterns/docs/patterns/Factory",draft:!1,unlisted:!1,tags:[{label:"Factory",permalink:"/patterns/docs/tags/factory"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"creational",permalink:"/patterns/docs/tags/creational"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"}],version:"current",frontMatter:{id:"Factory",title:"Factory",tags:["Factory","https://github.com/ignatandrei/patterns","creational","design pattern","Factory"]},sidebar:"tutorialSidebar",previous:{title:"Facade",permalink:"/patterns/docs/patterns/Facade"},next:{title:"Iterator",permalink:"/patterns/docs/patterns/Iterator"}},c={},l=[{value:"Example in .NET :",id:"example-in-net-",level:2},{value:"Factory",id:"factory",level:3},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"pattern--factory",children:"Pattern:  Factory"}),"\n",(0,n.jsx)(e.p,{children:"A factory is a function or method that returns objects of a varying prototype or class from some method call, which is assumed to be new"}),"\n",(0,n.jsx)(e.h2,{id:"example-in-net-",children:"Example in .NET :"}),"\n",(0,n.jsx)(e.h3,{id:"factory",children:"Factory"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-csharp",metastring:'showLineNumbers title="Factory example for Pattern Factory"',children:'using Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Controllers;\r\nusing Microsoft.AspNetCore.Mvc.Internal;\r\nusing System.Data.Common;\r\nusing System.Globalization;\r\nusing System.Net;\r\nusing System.Web.Mvc;\r\n\r\nnamespace Factory;\r\ninternal class FactoryDemo\r\n{\r\n    public static void DemoWebRequest()\r\n    {\r\n        HttpWebRequest hwr = (HttpWebRequest)WebRequest.Create("http://www.yahoo.com");\r\n\r\n    }\r\n    public static void DemoConvert()\r\n    {\r\n        string value = "1,500";\r\n        Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture("en-US");\r\n\r\n        Console.WriteLine(Convert.ToDouble(value));\r\n\r\n        Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture("fr-FR");\r\n        Console.WriteLine(Convert.ToDouble(value));\r\n\r\n    }\r\n    static void RegisterControllerFactory()\r\n    {\r\n        ControllerBuilder.Current.SetControllerFactory(new MyControllerFactory());\r\n    }\r\n}\r\n\r\n//default controller factory is a factory of controllers\r\nclass MyControllerFactory : System.Web.Mvc.DefaultControllerFactory\r\n{\r\n\r\n    public override IController CreateController(System.Web.Routing.RequestContext requestContext, string controllerName)\r\n    {\r\n        if (controllerName == "andrei")\r\n            return null;//maybe controller not found\r\n\r\n        return base.CreateController(requestContext, controllerName);\r\n    }\r\n}\r\n    \n'})}),"\n",(0,n.jsx)(e.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,n.jsx)("a",{href:"http://wiki.c2.com/?FactoryPattern",target:"_blank",children:"C2Wiki"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"http://www.dofactory.com/net/factory-design-pattern",target:"_blank",children:"dofactory"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://github.com/kamranahmedse/design-patterns-for-humans?tab=readme-ov-file#-factory",target:"_blank",children:"DPH"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://www.danstroot.com/posts/2018-10-03-hammer-factories",target:"_blank",children:"Hammer Factories"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)("a",{href:"https://en.wikipedia.org/wiki/Factory_pattern",target:"_blank",children:"Wikipedia"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(e.h2,{id:"homework",children:"Homework"}),"\n",(0,n.jsx)(e.p,{children:"having multiple types of drinks( water, tea, coffee) with an IDrink interface  create a factory method ( with a parameter ) to create a drink"})]})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}},8453:(t,e,r)=>{r.d(e,{R:()=>s,x:()=>i});var n=r(6540);const a={},o=n.createContext(a);function s(t){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:s(t.components),n.createElement(o.Provider,{value:e},t.children)}}}]);