"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[2514],{8032:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(4848),i=t(8453);const a={id:"Builder",title:"Builder",tags:["Builder","https://github.com/ignatandrei/patterns","creational","design pattern","UriBuilder","SqlConnectionStringBuilder"]},l="Pattern:  Builder",s={id:"patterns/Builder",title:"Builder",description:"The intent of the Builder design pattern is to separate the construction of a complex object from its representation",source:"@site/docs/patterns/Builder.md",sourceDirName:"patterns",slug:"/patterns/Builder",permalink:"/patterns/docs/patterns/Builder",draft:!1,unlisted:!1,tags:[{label:"Builder",permalink:"/patterns/docs/tags/builder"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"creational",permalink:"/patterns/docs/tags/creational"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"},{label:"UriBuilder",permalink:"/patterns/docs/tags/uri-builder"},{label:"SqlConnectionStringBuilder",permalink:"/patterns/docs/tags/sql-connection-string-builder"}],version:"current",frontMatter:{id:"Builder",title:"Builder",tags:["Builder","https://github.com/ignatandrei/patterns","creational","design pattern","UriBuilder","SqlConnectionStringBuilder"]},sidebar:"tutorialSidebar",previous:{title:"Adapter",permalink:"/patterns/docs/patterns/Adapter"},next:{title:"Chain",permalink:"/patterns/docs/patterns/Chain"}},o={},d=[{value:"Examples in .NET :",id:"examples-in-net-",level:2},{value:"UriBuilder",id:"uribuilder",level:3},{value:"SqlConnectionStringBuilder",id:"sqlconnectionstringbuilder",level:3},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"pattern--builder",children:"Pattern:  Builder"}),"\n",(0,r.jsx)(n.p,{children:"The intent of the Builder design pattern is to separate the construction of a complex object from its representation"}),"\n",(0,r.jsx)(n.h2,{id:"examples-in-net-",children:"Examples in .NET :"}),"\n",(0,r.jsx)(n.h3,{id:"uribuilder",children:"UriBuilder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'showLineNumbers title="UriBuilder example for Pattern Builder"',children:'namespace Builder;\r\nstatic class UriBuilderDemo\r\n{\r\n    public static void UriMod()\r\n    {\r\n        //start example 1\r\n        var uri = new Uri("https://msprogrammer.serviciipeweb.ro/category/friday-links/");\r\n        var b = new UriBuilder(uri);\r\n        //changing part\r\n        b.Scheme = "http";\r\n        //now we have http://msprogrammer.serviciipeweb.ro/category/friday-links/\r\n        Console.WriteLine(b.Uri);\r\n        //changing part\r\n        b.Path = "2018/03/05/design-patterns-class/";\r\n        //now we have http://msprogrammer.serviciipeweb.ro/2018/03/05/design-patterns-class/\r\n        Console.WriteLine(b.Uri);\r\n        //end example 1\r\n    }\r\n}\r\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"sqlconnectionstringbuilder",children:"SqlConnectionStringBuilder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'showLineNumbers title="SqlConnectionStringBuilder example for Pattern Builder"',children:'namespace Builder;\r\ninternal class ConnectionStringDemo\r\n{\r\n    public static void ConnectionString()\r\n    {\r\n        //start example 2\r\n        var build = new SqlConnectionStringBuilder();\r\n        build.DataSource = ".";\r\n        build.InitialCatalog = "MyDatabase";\r\n        build.ConnectTimeout = 30;\r\n        //here is the connection string built\r\n        Console.WriteLine(build.ConnectionString);\r\n        //end example 2\r\n    }\r\n}\r\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Builder_pattern",children:"Wikipedia"})}),"\n",(0,r.jsx)(n.h2,{id:"homework",children:"Homework"}),"\n",(0,r.jsx)(n.p,{children:"Imagine that you have a logger that logs to a file and to a console. Implement a builder that will allow you to create a logger with different configurations. For example, you can set the log level, the log format, and the log destination."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(6540);const i={},a=r.createContext(i);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);