"use strict";(self.webpackChunkpatterns_site=self.webpackChunkpatterns_site||[]).push([[6960],{681:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=r(4848),n=r(8453);const o={id:"Decorator",title:"Decorator",tags:["Decorator","https://github.com/ignatandrei/patterns","behavioral","design pattern","Decorator"]},i="Pattern:  Decorator",s={id:"patterns/Decorator",title:"Decorator",description:"Decorator allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class.",source:"@site/docs/patterns/Decorator.md",sourceDirName:"patterns",slug:"/patterns/Decorator",permalink:"/patterns/docs/patterns/Decorator",draft:!1,unlisted:!1,tags:[{label:"Decorator",permalink:"/patterns/docs/tags/decorator"},{label:"https://github.com/ignatandrei/patterns",permalink:"/patterns/docs/tags/https-github-com-ignatandrei-patterns"},{label:"behavioral",permalink:"/patterns/docs/tags/behavioral"},{label:"design pattern",permalink:"/patterns/docs/tags/design-pattern"}],version:"current",frontMatter:{id:"Decorator",title:"Decorator",tags:["Decorator","https://github.com/ignatandrei/patterns","behavioral","design pattern","Decorator"]},sidebar:"tutorialSidebar",previous:{title:"Builder",permalink:"/patterns/docs/patterns/Builder"},next:{title:"Facade",permalink:"/patterns/docs/patterns/Facade"}},c={},l=[{value:"Example in .NET :",id:"example-in-net-",level:2},{value:"Decorator",id:"decorator",level:3},{value:"Learn More",id:"learn-more",level:2},{value:"Homework",id:"homework",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"pattern--decorator",children:"Pattern:  Decorator"}),"\n",(0,a.jsx)(t.p,{children:"Decorator allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class."}),"\n",(0,a.jsx)(t.h2,{id:"example-in-net-",children:"Example in .NET :"}),"\n",(0,a.jsx)(t.h3,{id:"decorator",children:"Decorator"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:'showLineNumbers title="Decorator example for Pattern Decorator"',children:'\r\nnamespace Decorator;\r\ninternal class DecoratorDemo\r\n{\r\n    public static void Stream_Crypto_Gzip()\r\n    {\r\n        string nameFile = "test.txt";\r\n        if (File.Exists(nameFile))\r\n            File.Delete(nameFile);\r\n        byte[] data = ASCIIEncoding.ASCII.GetBytes("Hello World!");\r\n        //first time we have a stream\r\n        using (var stream = new FileStream(nameFile, FileMode.OpenOrCreate, FileAccess.Write))\r\n        {\r\n            //stream.Write(data, 0, data.Length);\r\n            //return;\r\n            \r\n            var cryptic = new DESCryptoServiceProvider();\r\n\r\n            cryptic.Key = ASCIIEncoding.ASCII.GetBytes("ABCDEFGH");\r\n            cryptic.IV = ASCIIEncoding.ASCII.GetBytes("ABCDEFGH");\r\n            //we decorate the initial stream with a crypto stream\r\n            using (var crStream = new CryptoStream(stream, cryptic.CreateEncryptor(), CryptoStreamMode.Write))\r\n            {\r\n                //and we decorate further by encoding\r\n                using (var gz = new GZipStream(crStream, CompressionLevel.Optimal))\r\n                {\r\n                    gz.Write(data, 0, data.Length);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\n'})}),"\n",(0,a.jsx)(t.h2,{id:"learn-more",children:"Learn More"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Prototype_pattern",children:"Wikipedia"})}),"\n",(0,a.jsx)(t.h2,{id:"homework",children:"Homework"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Add a logging to DBConnection . 2. Use by decorating a coffee with milk, sugar, and chocolate (and maybe other condiments). The coffee should be able to display the condiments in a Display method and calculate the price of the coffee with milk, sugar, and chocolate."}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var a=r(6540);const n={},o=a.createContext(n);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);