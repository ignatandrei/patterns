@inherits RazorBlade.PlainTextTemplate<PatternDataGenerator>;
@{
    var classNames = Model.ClassWithExamples;
    var example = "Examples";
    if(classNames.Length == 1)
    {
        example = "Example";
    }
    var linkZip = $"/zipSourceCodes/{Model.Title.ToLowerInvariant()}.zip"; 
}
---
id: @Model.Title
title: @Model.Title
tags:
  - @Model.Title
  - https://github.com/ignatandrei/patterns
  @foreach(var tag in Model.TagsArray())
  {
<text>
  - @tag
</text>
  }
  @for (var ci = 0; ci < classNames.Length; ci++)
  {
<text>
  - @classNames[ci].Name
</text>
}
---

# Pattern:  @Model.Title

Read online at https://ignatandrei.github.io/patterns/docs/patterns/@Model.Title

<!-- id : @Model.Id -->
@foreach (var item in @Model.Description)
{
    @item
    <br />
}

## Purpose of .NET implementation

@foreach (var item in @Model.Explanation)
{
    @item
    <br />
}

## @example in .NET : 

@for(var ci = 0; ci < classNames.Length; ci++)
{
<text>
###  @classNames[ci].Name
```csharp showLineNumbers title="@classNames[ci].Name example for Pattern @Model.Title"
@classNames[ci].Code
```

</text>
}
<!-- delete start -->
[Download source](@linkZip)
<!-- delete end -->
@if (Model.Links?.Length > 0){
<text>

## See Source Code for Microsoft implementation of @Model.Title

@foreach (var link in Model.SourceCodeLinks())
{
<text>
[@link.Name](@link.Link) : @link.Link
</text>
}


## Learn More

@foreach (var link in Model.ExternalLinks())
        {
<text>
[@link.Name](@link.Link) : @link.Link   
</text>

        }

</text>
}

## Homework


@foreach (var item in @Model.Homework)
{
    @item
    <br />
}


